package linker

import (
	"fmt"
	"time"

	pe "github.com/patrick-jessen/script/linker/PE"
)

func Run() {
	fmt.Println("LINKING ==================================")
	start := time.Now()

	code := []byte{
		// push rbp
		// mov rbp, rsp

		// mov rcx, 0
		// mov rdx, 0x403000
		// mov r8, 0x403005
		// mov r9, 0
		// call [0x402088]

		// mov rcx, 0
		// call [0x402078]
		// leave
		// ret
		0x55, 0x48, 0x89, 0xE5, 0x48, 0xC7, 0xC1, 0x00, 0x00, 0x00, 0x00, 0x48, 0xC7, 0xC2, 0x00, 0x30,
		0x40, 0x00, 0x49, 0xC7, 0xC0, 0x05, 0x30, 0x40, 0x00, 0x49, 0xC7, 0xC1, 0x00, 0x00, 0x00, 0x00,
		0xFF, 0x14, 0x25, 0x88, 0x20, 0x40, 0x00, 0x48, 0xC7, 0xC1, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x14,
		0x25, 0x78, 0x20, 0x40, 0x00, 0xC9, 0xC3,
	}

	data := []byte{
		't', 'e', 'x', 't', 0x00,
		'c', 'a', 'p', 0x00,
	}

	p := pe.New(0x1000, 0x200)
	p.SetCode(code)
	p.SetData(data)
	p.Import("ExitProcess", "kernel32.dll")
	p.Import("MessageBoxA", "user32.DLL")
	p.WriteFile("./out.exe")

	fmt.Println("time:", time.Since(start))
	fmt.Println("file written: ./out.exe")
}
